
AWSTemplateFormatVersion: 2010-09-09

Description: >-
  AWS CloudFormation VPC Template

Parameters:

  VPCCidrBlock:
    Description: "Server Environment name."
    Type: "String"
    Default: "10.0.0.0/16"

Resources:

### VPC ###
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock:
        Ref: VPCCidrBlock
      Tags:
        - Key: Name
          Value: 'MainVPC'

### Subnets ###

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3a
      CidrBlock: 10.0.0.0/19
      Tags:
        - Key: Name
          Value: 'MainVPC-private-a'
      VpcId:
        Ref: VPC

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3b
      CidrBlock: 10.0.32.0/19
      Tags:
        - Key: Name
          Value: 'MainVPC-private-b'
      VpcId:
        Ref: VPC

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3c
      CidrBlock: 10.0.64.0/19
      Tags:
        - Key: Name
          Value: 'MainVPC-private-c'
      VpcId:
        Ref: VPC

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3a
      CidrBlock: 10.0.128.0/20
      Tags:
        - Key: Name
          Value: 'MainVPC-public-a'
      VpcId:
        Ref: VPC

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3b
      CidrBlock: 10.0.144.0/20
      Tags:
        - Key: Name
          Value: 'MainVPC-public-b'
      VpcId:
        Ref: VPC

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-3c
      CidrBlock: 10.0.160.0/20
      Tags:
        - Key: Name
          Value: 'MainVPC-public-c'
      VpcId:
        Ref: VPC

### Internet Gateway ###

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: 'MainVPC-InternetGateway'

  AttachInternetGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

### Elastic IP ###

  NatEipA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MainVPC-EIP-A

  NatEipB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MainVPC-EIP-B

  NatEipC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: MainVPC-EIP-C

### Nat Gateway ##

  NatGatewayA:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt: NatEipA.AllocationId
      SubnetId:
        Ref: PublicSubnetA
      Tags:
        - Key: Name
          Value: MainVPC-nat-a

  NatGatewayB:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt: NatEipB.AllocationId
      SubnetId:
        Ref: PublicSubnetB
      Tags:
        - Key: Name
          Value: MainVPC-nat-b

  NatGatewayC:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt: NatEipC.AllocationId
      SubnetId:
        Ref: PublicSubnetC
      Tags:
        - Key: Name
          Value: MainVPC-nat-c

### Route tables ###

# PublicA #
  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: MainVPC-route-public-a

  AttachPublicRouteTableA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTableA
      SubnetId:
        Ref: PublicSubnetA

  PublicRouteA:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTableA

# PublicB #
  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: MainVPC-route-public-b

  AttachPublicRouteTableB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTableB
      SubnetId:
        Ref: PublicSubnetB

  PublicRouteB:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTableB

# PublicC #
  PublicRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: MainVPC-route-public-c

  AttachPublicRouteTableC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTableC
      SubnetId:
        Ref: PublicSubnetC

  PublicRouteC:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTableC

# PrivateA #
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: MainVPC-route-private-a

  AttachPrivateRouteTableA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableA
      SubnetId:
        Ref: PrivateSubnetA

  PrivateRouteA:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayA
      RouteTableId:
        Ref: PrivateRouteTableA

# PrivateB #
  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: MainVPC-route-private-b

  AttachPrivateRouteTableB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableB
      SubnetId:
        Ref: PrivateSubnetB

  PrivateRouteB:
    DependsOn: NatGatewayB
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayB
      RouteTableId:
        Ref: PrivateRouteTableB

# PrivateC #
  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: MainVPC-route-private-c

  AttachPrivateRouteTableC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableC
      SubnetId:
        Ref: PrivateSubnetC

  PrivateRouteC:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayC
      RouteTableId:
        Ref: PrivateRouteTableC

### Public Network ACL ###

  NetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: 
        Ref: VPC
      Tags:
      - Key: Name
        Value: MainVPC-nacl-public

  SubnetNetworkAclAssociationPublicA:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnetA
      NetworkAclId:
        Ref: NetworkAclPublic

  SubnetNetworkAclAssociationPublicB:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnetB
      NetworkAclId:
        Ref: NetworkAclPublic

  SubnetNetworkAclAssociationPublicC:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnetC
      NetworkAclId:
        Ref: NetworkAclPublic

  NetworkAclEntryInPublicAllowHTTP:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId:
        Ref: NetworkAclPublic
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
      PortRange:
        From: 80
        To: 80
      
  NetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId:
        Ref: NetworkAclPublic
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'

###  Private Network NACL ###

  NetworkAclPrivate:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: MainVPC-nacl-private

  SubnetNetworkAclAssociationPrivateA:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnetA
      NetworkAclId:
        Ref: NetworkAclPrivate

  SubnetNetworkAclAssociationPrivateB:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnetB
      NetworkAclId:
        Ref: NetworkAclPrivate

  SubnetNetworkAclAssociationPrivateC:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId:
       Ref: PrivateSubnetC
      NetworkAclId:
        Ref: NetworkAclPrivate

  NetworkAclEntryInPrivateAllowMySQLFromPublicSubnetA:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId:
        Ref: NetworkAclPrivate
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.0.128.0/20
      PortRange:
        From: 3600
        To: 3600

  NetworkAclEntryInPrivateAllowMySQLFromPublicSubnetB:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId:
        Ref: NetworkAclPrivate
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.0.144.0/20
      PortRange:
        From: 3600
        To: 3600

  NetworkAclEntryInPrivateAllowMySQLFromPublicSubnetC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId:
        Ref: NetworkAclPrivate
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 10.0.160.0/20
      PortRange:
        From: 3600
        To: 3600
      
  NetworkAclEntryOutPrivateAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId:
        Ref: NetworkAclPrivate
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'

Outputs: 

  VPC: 
    Description: "VPC Id"
    Value: 
      Ref: VPC
    Export:
      Name: VPC
